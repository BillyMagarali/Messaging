{"version":3,"sources":["pages/Home.js","services/firebase.js","pages/Chat.js","helpers/auth.js","pages/Signup.js","pages/Login.js","App.js","index.js"],"names":["Home","className","to","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","timeConverter","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","slice","getMinutes","getSeconds","Chat","props","state","user","currentUser","chats","content","readError","writeError","handleChange","bind","handleSubmit","this","setState","ref","on","snapshot","forEach","snap","push","val","error","message","event","target","value","preventDefault","timestamp","now","uid","email","onScroll","map","chat","onSubmit","autoFocus","required","onChange","type","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","SignUp","password","githubSignIn","googleSignIn","name","createUserWithEmailAndPassword","placeholder","onClick","Login","signInWithEmailAndPassword","autoComplete","PrivateRoute","component","authenticated","rest","render","pathname","from","location","PublicRoute","App","loading","onAuthStateChanged","basename","exact","path","Signup","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed28a276.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <h1>Welcome to <Link to=\"/\">Messaging</Link></h1>\r\n                <h2> <Link to=\"/Login\">Login</Link></h2>\r\n                <h2> <Link to=\"/Signup\">Sign Up</Link></h2>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n\r\n}","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyD31Nzhof6UsCw5Kb1rxrQOMSbnP7OKglY\",\r\n    authDomain: \"messaging-9cc0e.firebaseapp.com\",\r\n    databaseURL: \"https://messaging-9cc0e.firebaseio.com\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth;\r\nexport const db = firebase.database();\r\n","import React, { Component } from \"react\";\r\nimport { auth } from \"../services/firebase\";\r\nimport { db } from \"../services/firebase\";\r\n\r\n\r\nfunction timeConverter(UNIX_timestamp) {\r\n    var a = new Date(UNIX_timestamp);\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = ('0' + a.getHours()).slice(-2);\r\n    var min = ('0' + a.getMinutes()).slice(-2);\r\n    var sec = ('0' + a.getSeconds()).slice(-2);\r\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\r\n    return time;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Chat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: auth().currentUser,\r\n            chats: [],\r\n            content: '',\r\n            readError: null,\r\n            writeError: null\r\n\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        this.setState({ readError: null });\r\n        try {\r\n            db.ref(\"chats\").on(\"value\", snapshot => {\r\n                let chats = [];\r\n                snapshot.forEach((snap) => {\r\n                    chats.push(snap.val());\r\n                });\r\n                this.setState({ chats });\r\n\r\n            });\r\n\r\n        } catch (error) {\r\n            this.setState({ readError: error.message });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            content: event.target.value,\r\n\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ writeError: null });\r\n        try {\r\n            await db.ref(\"chats\").push({\r\n                content: this.state.content,\r\n                timestamp: Date.now(),\r\n                uid: this.state.user.uid,\r\n                email: this.state.user.email\r\n            });\r\n            this.setState({ content: '' });\r\n\r\n        } catch (error) {\r\n            this.setState({ writeError: error.message });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"chats\" onScroll={this.onScroll}>\r\n                    <div>\r\n\r\n                        {this.state.chats.map(chat => {\r\n                            return <div key={chat.timestamp} className=\"message\">\r\n                                <p><strong>{chat.email}</strong> <em>{timeConverter(chat.timestamp)}</em></p>\r\n                                <p>{chat.content}</p>\r\n                            </div>\r\n\r\n                        })}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"sendform\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input autoFocus required onChange={this.handleChange} value={this.state.content}></input>\r\n                        {this.state.error ? <p>{this.state.writeError}</p> : null}\r\n                        <button type=\"submit\">Send</button>\r\n                    </form>\r\n\r\n                    <div>\r\n                        Login in as: <strong>{this.state.user.email}</strong>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div >\r\n\r\n        );\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { auth } from \"../services/firebase\";\r\n\r\nexport function signup(email, password) {\r\n    return auth().createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\n\r\nexport function signin(email, password) {\r\n    return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function signInWithGoogle() {\r\n    const provider = new auth.GoogleAuthProvider();\r\n    return auth().signInWithPopup(provider);\r\n}\r\n\r\nexport function signInWithGitHub() {\r\n    const provider = new auth.GithubAuthProvider();\r\n    return auth().signInWithPopup(provider);\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signup, signInWithGoogle, signInWithGitHub } from \"../helpers/auth\";\r\n\r\n\r\n\r\nexport default class SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            email: '',\r\n            password: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.githubSignIn = this.githubSignIn.bind(this);\r\n        this.googleSignIn = this.googleSignIn.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ error: '' });\r\n        try {\r\n            await signup(this.state.email, this.state.password);\r\n\r\n\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    async githubSignIn() {\r\n        try {\r\n            await signInWithGitHub();\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    async googleSignIn() {\r\n        try {\r\n            await signInWithGoogle();\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <h1>Sign up to <Link to=\"/\">Messaging</Link></h1>\r\n                    <p>Fill in the form below to create an account.</p>\r\n                    <div>\r\n                        <input placeholder=\"Email\" required=\"true\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n                    </div>\r\n                    <div>\r\n                        <input placeholder=\"Password\" required=\"true\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n                    </div>\r\n                    <div>\r\n                        {this.state.error ? <p>{this.state.error}</p> : null}\r\n                        <button type=\"submit\">Sign up</button>\r\n\r\n                    </div>\r\n                    <p>Or</p>\r\n                    <hr></hr>\r\n                    <button type=\"button\" onClick={this.googleSignIn} >\r\n                        Sign up with Google\r\n</button>\r\n\r\n                    <hr></hr>\r\n                    <button type=\"button\" onClick={this.githubSignIn}>\r\n                        Sign up with GitHub\r\n</button>\r\n                    <hr></hr>\r\n                    <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n                    <hr></hr>\r\n                    <p>Go back to <Link to=\"/\">Menu</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signin, signInWithGoogle, signInWithGitHub } from \"../helpers/auth\";\r\n\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.githubSignIn = this.githubSignIn.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ error: \"\" });\r\n        try {\r\n            await signin(this.state.email, this.state.password);\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    async googleSignIn() {\r\n        try {\r\n            await signInWithGoogle();\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    async githubSignIn() {\r\n        try {\r\n            await signInWithGitHub();\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form\r\n                    autoComplete=\"off\"\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <h1>Login to <Link to=\"/\">Messaging</Link></h1>\r\n                    <p>\r\n                        Fill in the form below to login to your account.\r\n          </p>\r\n                    <div>\r\n                        <input\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.email}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.password}\r\n                            type=\"password\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        {this.state.error ? (\r\n                            <p>{this.state.error}</p>\r\n                        ) : null}\r\n                        <button type=\"submit\">Login</button>\r\n                    </div>\r\n                    <hr />\r\n                    <p>\r\n                        Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n                    </p>\r\n                    <p>Or</p>\r\n                    <button onClick={this.googleSignIn} type=\"button\">\r\n                        Sign up with Google\r\n</button>\r\n                    <p>Or</p>\r\n                    <button type=\"button\" onClick={this.githubSignIn}>\r\n                        Sign up with GitHub\r\n</button>\r\n                    <hr></hr>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import './App.css';\nimport './index.css';\nimport React, { Component } from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Chat from './pages/Chat';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { auth } from './services/firebase';\n\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => authenticated === true\n        ? <Component {...props} />\n        : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => authenticated === false\n        ? <Component {...props} />\n        : <Redirect to='/chat' />}\n    />\n  )\n}\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    })\n  }\n\n  render() {\n    return this.state.loading === true ? <h2>Loading...</h2> : (\n\n\n      <Router basename=\"/messaging\">\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <PrivateRoute exact path=\"/chat\" authenticated={this.state.authenticated} component={Chat}></PrivateRoute>\n          <PublicRoute exact path=\"/signup\" authenticated={this.state.authenticated} component={Signup}></PublicRoute>\n          <PublicRoute exact path=\"/login\" authenticated={this.state.authenticated} component={Login}></PublicRoute>\n        </Switch>\n      </Router>\n\n    );\n  }\n\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}